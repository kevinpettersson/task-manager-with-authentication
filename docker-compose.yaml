
services:

  auth-service:
    build:
      context: .
      dockerfile: ./backend/auth-service/Dockerfile
    ports: 
      - "8081:8081" # Expose auth-service on port 5432
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/authdb
      SPRING_DATASOURCE_USERNAME: ${AUTH_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${AUTH_DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - db

  task-service:
    build: 
      context: .
      dockerfile: ./backend/task-service/Dockerfile
    ports: 
     - "8082:8082" # Expose task-service on port 8082
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/taskdb
      SPRING_DATASOURCE_USERNAME: ${TASK_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${TASK_DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports: 
      - "3000:3000" # Expose frontend on port 3000

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    ports: 
      - "5432:5432" # Expose PostgreSQL on port 5432
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

volumes:
  db-data: 
