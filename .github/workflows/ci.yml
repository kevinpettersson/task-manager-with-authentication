# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation

name: Java CI with Maven
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env: 
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      AUTH_DB_USERNAME: ${{ secrets.AUTH_DB_USERNAME }}
      AUTH_DB_PASSWORD: ${{ secrets.AUTH_DB_PASSWORD }}
      TASK_DB_USERNAME: ${{ secrets.TASK_DB_USERNAME }}
      TASK_DB_PASSWORD: ${{ secrets.TASK_DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run Docker Compose
      run: docker compose up -d 
      env: 
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        AUTH_DB_USERNAME: ${{ secrets.AUTH_DB_USERNAME }}
        AUTH_DB_PASSWORD: ${{ secrets.AUTH_DB_PASSWORD }}
        TASK_DB_USERNAME: ${{ secrets.TASK_DB_USERNAME }}
        TASK_DB_PASSWORD: ${{ secrets.TASK_DB_PASSWORD }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
